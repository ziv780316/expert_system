% check connection with cycle
% 1---2
% |\ /|
% | 3 |
% |/ \|
% 4---5
edge(1,2).
edge(1,4).
edge(1,3).
edge(2,3).
edge(2,5).
edge(3,4).
edge(3,5).
edge(4,5).

connected(X,Y) :- edge(X,Y) ; edge(Y,X).

path(A,B,Path) :- 
	travel(A,B,[A],BUF),
	reverse(BUF,Path).

travel(A,B,Visited,[B|Visited]) :-
	connected(A,B).

travel(A,B,Visited,Path) :-
	connected(A,C),
	C\=B,
	not(member(C,Visited)),
	travel(C,B,[C|Visited],Path).
	
?- path(1,5,Path), write(Path), nl, fail.	

% exit
?- halt.
