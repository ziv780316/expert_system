:-style_check(-discontiguous).

next_to(X,Y) :- X =:= Y-1; X =:= Y+1.
left_of(X,Y) :- X =:= Y-1.
right_of(X,Y) :- X =:= Y+1.

puzzle(X) :-
	Street=[
		house(1,_Man1,_Color1,_Pet1,_Drink1,_Smoke1),
		house(2,_Man2,_Color2,_Pet2,_Drink2,_Smoke2),
		house(3,_Man3,_Color3,_Pet3,_Drink3,_Smoke3),
		house(4,_Man4,_Color4,_Pet4,_Drink4,_Smoke4),
		house(5,_Man5,_Color5,_Pet5,_Drink5,_Smoke5)],
	member(house(_,british,red,_,_,_),Street),
	member(house(_,swede,_,dog,_,_),Street),
	member(house(_,danish,_,_,tee,_),Street),
	member(house(A,_,green,_,_,_),Street),
	member(house(B,_,white,_,_,_),Street),
	left_of(A,B),
	member(house(_,_,green,_,coffee,_),Street),
	member(house(_,_,_,bird,_,pallmall),Street),
	member(house(_,_,yellow,_,_,dunhill),Street),
	member(house(3,_,_,_,milk,_),Street),
	member(house(1,norse,_,_,_,_),Street),
	member(house(C,_,_,_,_,mixed),Street),
	member(house(D,_,_,cat,_,_),Street),
	next_to(C,D),
	member(house(E,_,_,horse,_,_),Street),
	member(house(F,_,_,_,_,dunhill),Street),
	next_to(E,F),
	member(house(_,_,_,_,beer,bluemaster),Street),
	member(house(_,german,_,_,_,prince),Street),
	member(house(G,norse,_,_,_,_),Street),
	member(house(H,_,blue,_,_,_),Street),
	next_to(G,H),
	member(house(I,_,_,_,_,mixed),Street),
	member(house(J,_,_,_,water,_),Street),
	next_to(I,J),
	member(house(_,X,_,fish,_,_),Street). % query


?- puzzle(X), write(X), nl.

% exit 
?- halt.
